FROM osrf/ros:humble-desktop-full

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install dependencies and tools
RUN apt-get update && apt-get install -y \
    git wget curl python3-pip software-properties-common ros-dev-tools gpg apt-transport-https\
    && rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip3 install --no-cache-dir setuptools==58.2.0 colcon-common-extensions

# Add Gazebo repository
RUN wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/gazebo-stable.list > /dev/null

# Install ROS2 packages
RUN apt-get update && apt-get install -y \
    ros-humble-desktop \
    ~nros-humble-rqt* \
    ignition-fortress \
    ros-humble-gazebo-* \
    ros-humble-cartographer \
    ros-humble-cartographer-ros \
    ros-humble-navigation2 \
    ros-humble-nav2-bringup \
    ros-humble-dynamixel-sdk \
    ros-humble-turtlebot3-msgs \
    ros-humble-turtlebot3 \
    && rm -rf /var/lib/apt/lists/*

#Update
RUN apt-get update && apt-get upgrade -y

# VSCode install
RUN echo "code code/add-microsoft-repo boolean true" | sudo debconf-set-selections
RUN wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
RUN install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
RUN echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" |sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null
RUN rm -f packages.microsoft.gpg

RUN apt-get update
RUN apt-get install vim code curl -y
RUN git clone --depth 1 https://github.com/junegunn/fzf.git /usr/local/fzf \
    && /usr/local/fzf/install --all --no-bash --no-zsh --no-fish

ENV PATH="/usr/local/fzf/bin:$PATH"

# Create a non-root user
RUN useradd -m -s /bin/bash dockerian && \
echo "dockerian ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/dockerian

# Set up the user's environment
COPY ./.bashrc /home/dockerian/.bashrc
RUN chown dockerian:dockerian /home/dockerian/.bashrc

# Set the working directory
WORKDIR /home/dockerian

# Switch to the non-root user
USER dockerian

RUN rosdep update

# Entrypoint
COPY ./entrypoint.sh /entrypoint.sh
RUN sudo chmod 755 /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]
